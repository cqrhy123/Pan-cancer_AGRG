library(GSVA)
library(limma)
library(GSEABase)
inputFile="ACC-exp.txt"
gmtFile="HALLMARK_ADIPOGENESISgeneset.gmt"
setwd("E:\\pancancer\\ACC\\TCGA-ACC.htseq_fpkm.tsv")
rt=read.table(inputFile,sep="\t",header=T,check.names=F)
rt=as.matrix(rt)
rownames(rt)=rt[,1]
exp=rt[,2:ncol(rt)]
dimnames=list(rownames(exp),colnames(exp))
mat=matrix(as.numeric(as.matrix(exp)),nrow=nrow(exp),dimnames=dimnames)
mat=avereps(mat)
mat=mat[rowMeans(mat)>0,]
geneSet=getGmt(gmtFile, geneIdType=SymbolIdentifier())
ssgseaScore=gsva(mat, geneSet, method='ssgsea', kcdf='Gaussian', abs.ranking=TRUE)
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))}
ssgseaOut=normalize(ssgseaScore)
ssgseaOut=rbind(id=colnames(ssgseaOut),ssgseaOut)
write.table(ssgseaOut,file="HALLMARK_ADIPOGENESISssgseaOut.txt",sep="\t",quote=F,col.names=F)
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
install.packages(GSVAdata)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GSVAdata")
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
setwd("E:\\pancancer\\ACC")
exp <- read.table("ACC-exp.txt",head=T,row.names=1)
exp <- read.table("ACC-exp.txt",head=T,row.names=1)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
setwd("E:\\pancancer\\ACC")
exp <- read.table("ACC-exp.txt",head=T,row.names=1)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
dimnames=list(rownames(exp_data),colnames(exp_data))
exp <- read.table("ACC-exp.txt",head=T,row.names=1)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)],by=list(exp$Ensembl_ID),FUN="mean")
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
exp <- read.table("ACC-exp.txt",head=T,row.names=1)
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
exp <- read.table("ACC-exp.txt",head=T)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
dimnames=list(rownames(exp_data),colnames(exp_data))
exp_data1=matrix(as.numeric(as.matrix(exp_data)),nrow=nrow(exp_data),dimnames=dimnames)
exp_data1=avereps(exp_data1)
exp_data1=exp_data1[rowMeans(exp_data1)>0,]
geneSets <- getGmt('E:\\pancancer\\ACC\\h.all.v7.4.symbols.gmt')
ssGSEA_Score=gsva(exp_data1, geneSets, method='ssgsea', kcdf='Gaussian', abs.ranking=TRUE)#ssGSEA计算
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))}#定义ssGSEA_Score矫正函数
norm_ssGSEA_Score=normalize(ssGSEA_Score)#对ssGSEA_Score进行矫正
norm_ssGSEA_Score=rbind(id=colnames(norm_ssGSEA_Score),norm_ssGSEA_Score)
a <- as.data.frame(norm_ssGSEA_Score)
a <- a[-1,]
for (i in colnames(a)){
a[,i]<- as.numeric(a[,i])
}
write.csv(a,"ACCssgsea结果.csv")
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
exp <- read.table("ACC-exp.txt",head=T)
#将重复基因合并
exp2 <- aggregate(exp[,2:80],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
dimnames=list(rownames(exp_data),colnames(exp_data))
exp_data1=matrix(as.numeric(as.matrix(exp_data)),nrow=nrow(exp_data),dimnames=dimnames)
exp_data1=avereps(exp_data1)
exp_data1=exp_data1[rowMeans(exp_data1)>0,]
geneSets <- getGmt('E:\\pancancer\\ACC\\h.all.v7.4.symbols.gmt')
ssGSEA_Score=gsva(exp_data1, geneSets, method='ssgsea', kcdf='Gaussian', abs.ranking=TRUE)#ssGSEA计算
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))}#定义ssGSEA_Score矫正函数
norm_ssGSEA_Score=normalize(ssGSEA_Score)#对ssGSEA_Score进行矫正
norm_ssGSEA_Score=rbind(id=colnames(norm_ssGSEA_Score),norm_ssGSEA_Score)
a <- as.data.frame(norm_ssGSEA_Score)
a <- a[-1,]
for (i in colnames(a)){
a[,i]<- as.numeric(a[,i])
}
write.csv(a,"ACCssgsea结果2.csv")
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
exp <- read.table("ACC-exp.txt",head=T)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)+1],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
dimnames=list(rownames(exp_data),colnames(exp_data))
exp_data1=matrix(as.numeric(as.matrix(exp_data)),nrow=nrow(exp_data),dimnames=dimnames)
exp_data1=avereps(exp_data1)
exp_data1=exp_data1[rowMeans(exp_data1)>0,]
geneSets <- getGmt('E:\\pancancer\\ACC\\h.all.v7.4.symbols.gmt')
ssGSEA_Score=gsva(exp_data1, geneSets, method='ssgsea', kcdf='Gaussian', abs.ranking=TRUE)#ssGSEA计算
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))}#定义ssGSEA_Score矫正函数
norm_ssGSEA_Score=normalize(ssGSEA_Score)#对ssGSEA_Score进行矫正
norm_ssGSEA_Score=rbind(id=colnames(norm_ssGSEA_Score),norm_ssGSEA_Score)
a <- as.data.frame(norm_ssGSEA_Score)
a <- a[-1,]
for (i in colnames(a)){
a[,i]<- as.numeric(a[,i])
}
write.csv(a,"ACCssgsea结果3.csv")
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
exp <- read.table("TCGA-LAML.fpkm.txt",head=T)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)+1],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
dimnames=list(rownames(exp_data),colnames(exp_data))
exp_data1=matrix(as.numeric(as.matrix(exp_data)),nrow=nrow(exp_data),dimnames=dimnames)
exp_data1=avereps(exp_data1)
exp_data1=exp_data1[rowMeans(exp_data1)>0,]
geneSets <- getGmt('E:\\pancancer\\ACC\\h.all.v7.4.symbols.gmt')
ssGSEA_Score=gsva(exp_data1, geneSets, method='ssgsea', kcdf='Gaussian', abs.ranking=TRUE)#ssGSEA计算
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))}#定义ssGSEA_Score矫正函数
norm_ssGSEA_Score=normalize(ssGSEA_Score)#对ssGSEA_Score进行矫正
norm_ssGSEA_Score=rbind(id=colnames(norm_ssGSEA_Score),norm_ssGSEA_Score)
a <- as.data.frame(norm_ssGSEA_Score)
a <- a[-1,]
for (i in colnames(a)){
a[,i]<- as.numeric(a[,i])
}
write.csv(a,"LAMLssgsea结果.csv")
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
setwd("E:\\pancancer\\ACC")
inputFile="THCAexp.txt"
exp <- read.table(inputFile,head=T)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
dimnames=list(rownames(exp_data),colnames(exp_data))
exp_data1=matrix(as.numeric(as.matrix(exp_data)),nrow=nrow(exp_data),dimnames=dimnames)
exp_data1=avereps(exp_data1)
exp_data1=exp_data1[rowMeans(exp_data1)>0,]
geneSets <- getGmt('E:\\pancancer\\ACC\\h.all.v7.4.symbols.gmt')
ssGSEA_Score=gsva(exp_data1, geneSets, method='ssgsea', kcdf='Gaussian', abs.ranking=TRUE)#ssGSEA计算
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))}#定义ssGSEA_Score矫正函数
norm_ssGSEA_Score=normalize(ssGSEA_Score)#对ssGSEA_Score进行矫正
norm_ssGSEA_Score=rbind(id=colnames(norm_ssGSEA_Score),norm_ssGSEA_Score)
a <- as.data.frame(norm_ssGSEA_Score)
a <- a[-1,]
for (i in colnames(a)){
a[,i]<- as.numeric(a[,i])
}
write.csv(a,"THCAssgsea结果.csv")
setwd("E:\\pancancer\\相关性分析")
options(stringsAsFactors = F)
hall<- read.table("THCA-Hallmark.txt",head=T,row.names=1)
exp <- read.table("THCAexpNerve.txt",head=T,row.names=1)
exp <- exp[rownames(hall),]
library(psych)
#FDR选择矫正后的p值
cortest_psy_sdj <- corr.test(hall[,1:ncol(hall)], exp[,1:ncol(exp)], method = "pearson", adjust = "fdr")
cor <- cortest_psy_sdj$r#相关系数
write.csv(cor,"相关系数矩阵THCA.csv")
pval <- cortest_psy_sdj$p
write.csv(pval,"矫正后p值THCA.csv")
options(stringsAsFactors = F)
library(GSEABase)
library(GSVAdata)
library(Biobase)
library(genefilter)
library(limma)
library(RColorBrewer)
library(GSVA)
setwd("E:\\pancancer\\ACC")
inputFile="UCSexp.txt"
exp <- read.table(inputFile,head=T)
#将重复基因合并
exp2 <- aggregate(exp[,2:ncol(exp)],by=list(exp$Ensembl_ID),FUN="mean")
rownames(exp2)<- exp2[,1]
exp_data <- exp2[,-1]
dimnames=list(rownames(exp_data),colnames(exp_data))
exp_data1=matrix(as.numeric(as.matrix(exp_data)),nrow=nrow(exp_data),dimnames=dimnames)
exp_data1=avereps(exp_data1)
exp_data1=exp_data1[rowMeans(exp_data1)>0,]
geneSets <- getGmt('E:\\pancancer\\ACC\\h.all.v7.4.symbols.gmt')
ssGSEA_Score=gsva(exp_data1, geneSets, method='ssgsea', kcdf='Gaussian', abs.ranking=TRUE)#ssGSEA计算
normalize=function(x){
return((x-min(x))/(max(x)-min(x)))}#定义ssGSEA_Score矫正函数
norm_ssGSEA_Score=normalize(ssGSEA_Score)#对ssGSEA_Score进行矫正
norm_ssGSEA_Score=rbind(id=colnames(norm_ssGSEA_Score),norm_ssGSEA_Score)
a <- as.data.frame(norm_ssGSEA_Score)
a <- a[-1,]
for (i in colnames(a)){
a[,i]<- as.numeric(a[,i])
}
write.csv(a,"UCSssgsea结果.csv")
setwd("E:\\pancancer\\相关性分析")
options(stringsAsFactors = F)
hall<- read.table("UCS-Hallmark.txt",head=T,row.names=1)
exp <- read.table("UCSexpNerve.txt",head=T,row.names=1)
exp <- exp[rownames(hall),]
library(psych)
#FDR选择矫正后的p值
cortest_psy_sdj <- corr.test(hall[,1:ncol(hall)], exp[,1:ncol(exp)], method = "pearson", adjust = "fdr")
cor <- cortest_psy_sdj$r#相关系数
write.csv(cor,"相关系数矩阵UCS.csv")
pval <- cortest_psy_sdj$p
write.csv(pval,"矫正后p值UCS.csv")
